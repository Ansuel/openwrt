The docker containers
=====================

As the buildroot is very sensitive to the system it runs on, finding a
system where it works is quite a hard task. Therefore, besides of trying to
make it less sensitive, we provide Docker files (building the actual images and
publishing them periodically is currently work in progress) to provide an
environment very similar to the system we build on.

If you run the `./build-all` script, it creates the images on the local system.
This, however, takes not-trivial amount of time and system resources.

After that, you get five images:

* turris/turris-os-build:base: This is the base system with all the dependencies
  needed to perform the build. The source code is checked out, from the test
  branch (the one where development happens). However, no building is performed
  yet.
* turris/turris-os-build:omnia-toolchain: The sources are configured for the Omnia
  router and the toolchain has been built. No packages are compiled, but if you
  need a specific package, you can build just that one (and its dependencies),
  which should be relatively fast.
* turris/turris-os-build:omnia: The base system has also been built. This means you
  can probably just change a thing or two and the compilation will be fast.
  However, this still doesn't compile all the packages available (simply
  because it takes too long).
* turris/turris-os-build:turris-toolchain: Similar to omnia-toolchain, but for the
  older Turris router.
* turris/turris-os-build:turris: Similar to omnia, but for the older Turris router.

The recommended way to use the images is through the `./run` script. Pass the
tag (eg. omnia-toolchain) as parameter. When inside, the directory from which
you run the script is accessible in the share directory. You can get any data
in or out through it.

Note that the changes you make inside disappear after leaving â€’ this is a
property of docker. Don't forget to extract your working Makefiles and compiled
packages before leaving.
