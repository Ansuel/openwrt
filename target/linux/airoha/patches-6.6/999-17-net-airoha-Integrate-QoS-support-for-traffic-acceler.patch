From c1f0cda49e7bd2005871f887a116a7cddc6ff55a Mon Sep 17 00:00:00 2001
Message-ID: <c1f0cda49e7bd2005871f887a116a7cddc6ff55a.1738452112.git.lorenzo@kernel.org>
In-Reply-To: <bc341c91bf9f6363f16bb2c8c508e133e8aa7d36.1738452112.git.lorenzo@kernel.org>
References: <bc341c91bf9f6363f16bb2c8c508e133e8aa7d36.1738452112.git.lorenzo@kernel.org>
From: Lorenzo Bianconi <lorenzo@kernel.org>
Date: Tue, 28 Jan 2025 10:22:09 +0100
Subject: [PATCH net-next 9/9] net: airoha: Integrate QoS support for traffic
 accelerator

Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
---
 drivers/net/ethernet/airoha/airoha_ppe.c | 19 +++++++++++++++----
 1 file changed, 15 insertions(+), 4 deletions(-)

--- a/drivers/net/ethernet/airoha/airoha_ppe.c
+++ b/drivers/net/ethernet/airoha/airoha_ppe.c
@@ -110,11 +110,12 @@ static int airoha_get_dsa_port(struct ne
 
 static int airoha_ppe_foe_entry_prepare(struct airoha_foe_entry *hwe,
 					struct net_device *dev, int type,
-					int l4proto, u8 *src_mac, u8 *dest_mac)
+					int l4proto, u8 *src_mac, u8 *dest_mac,
+					u32 mark)
 {
 	int dsa_port = airoha_get_dsa_port(&dev);
 	struct airoha_foe_mac_info_common *l2;
-	u32 data, ports_pad, val;
+	u32 channel, data, ports_pad, val;
 
 	memset(hwe, 0, sizeof(*hwe));
 
@@ -149,7 +150,12 @@ static int airoha_ppe_foe_entry_prepare(
 	if (type == PPE_PKT_TYPE_IPV6_ROUTE_3T)
 		hwe->ipv6.ports = ports_pad;
 
-	data = FIELD_PREP(AIROHA_FOE_SHAPER_ID, 0x7f);
+	channel = mark / AIROHA_NUM_QOS_QUEUES;
+	data = FIELD_PREP(AIROHA_FOE_CHANNEL,
+			  channel % AIROHA_NUM_QOS_CHANNELS) |
+	       FIELD_PREP(AIROHA_FOE_QID, mark % AIROHA_NUM_QOS_QUEUES) |
+	       FIELD_PREP(AIROHA_FOE_SHAPER_ID, 0x7f);
+
 	if (type == PPE_PKT_TYPE_BRIDGE) {
 		hwe->bridge.dest_mac_hi = get_unaligned_be32(dest_mac);
 		hwe->bridge.dest_mac_lo = get_unaligned_be16(dest_mac + 4);
@@ -432,6 +438,7 @@ static int airoha_ppe_flow_offload_repla
 	int err, i, offload_type;
 	u16 addr_type = 0;
 	u8 l4proto = 0;
+	u32 mark = 0;
 
 	if (rhashtable_lookup(&eth->flow_table, &f->cookie,
 			      airoha_flow_table_params))
@@ -523,6 +530,9 @@ static int airoha_ppe_flow_offload_repla
 			data.pppoe.sid = act->pppoe.sid;
 			data.pppoe.num++;
 			break;
+		case FLOW_ACTION_MARK:
+			mark = act->mark;
+			break;
 		default:
 			return -EOPNOTSUPP;
 		}
@@ -533,7 +543,8 @@ static int airoha_ppe_flow_offload_repla
 		return -EINVAL;
 
 	err = airoha_ppe_foe_entry_prepare(&hwe, odev, offload_type, l4proto,
-					   data.eth.h_source, data.eth.h_dest);
+					   data.eth.h_source, data.eth.h_dest,
+					   mark);
 	if (err)
 		return err;
 
